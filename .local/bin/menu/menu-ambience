#!/bin/bash
#  __  __ _____ _   _ _   _         _    __  __ ____ ___ _____ _   _  ____ _____
# |  \/  | ____| \ | | | | |       / \  |  \/  | __ )_ _| ____| \ | |/ ___| ____|
# | |\/| |  _| |  \| | | | |_____ / _ \ | |\/| |  _ \| ||  _| |  \| | |   |  _|
# | |  | | |___| |\  | |_| |_____/ ___ \| |  | | |_) | || |___| |\  | |___| |___
# |_|  |_|_____|_| \_|\___/     /_/   \_\_|  |_|____/___|_____|_| \_|\____|_____|
#
# Script for playing ambience sounds in the background.

# Select which launcher to open.
source "$HOME/.local/bin/launcher"

# Path to ambient sounds.
sounds_dir="$HOME/Audio/Ambient-Sounds"

audio_files=$(ls "$sounds_dir")
actions=("Play audio" "Play random audio" "Stop playing audio")

selected_action=$(printf '%s\n' "${actions[@]}" | $LAUNCHER -l 15 -h 22 -p 'Select action')

kill_mpv() {
  killall mpv
}

play() {
  audio="$1"
  mpv --no-video --loop "$sounds_dir/$audio" &
  notify-send -u normal "Menu Ambience" "Playing $audio"
}

play_random() {
  random_audio=$(printf '%s\n' "${audio_files[@]}" | shuf -n 1)
  mpv --no-video --loop "$sounds_dir/$random_audio" &
  notify-send -u normal "Menu Ambience" "Playing $random_audio"
}

if [ -n "$selected_action" ]; then
  case "$selected_action" in
    "Play audio")
      # Select audio file.
      audio=$(printf '%s\n' "${audio_files[@]}" | sort | $LAUNCHER -l 15 -h 22 -p 'Select audio')
      [ -z "$audio" ] && exit 1
      # If mpv is running, kills it before playing an audio
      # to prevent multiple instances from running.
      kill_mpv
      # Play audio.
      play "$audio" ;;
    "Play random audio")
      # If mpv is running, kills it before playing an audio
      # to prevent multiple instances from running.
      kill_mpv
      # Play random audio.
      play_random ;;
    "Stop playing audio")
      # Kill mpv if any process is found.
      notify-send -u normal "Menu Ambience" "Stopping mpv!"
      kill_mpv || echo "No mpv process found." ;;
    *) # Exits with errors.
      echo "Invalid action." && exit 1 ;;
  esac
fi
